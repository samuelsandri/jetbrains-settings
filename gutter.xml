<application>
  <component name="LineMarkerSettings">
    <option name="providers">
      <map>
        <entry key="RenderedDoc" value="true" />
        <entry key="SwOpenInHttpClientLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.ExternalAnnotationLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.daemon.impl.IconLineMarkerProvider" value="true" />
        <entry key="com.intellij.codeInsight.daemon.impl.RecursiveCallLineMarkerProvider" value="true" />
        <entry key="com.intellij.execution.lineMarker.RunLineMarkerProvider" value="true" />
        <entry key="com.intellij.httpClient.http.request.codeInsight.HttpRequestDiffLineMarkerProvider" value="true" />
        <entry key="com.intellij.lang.javascript.highlighting.JSRecursiveCallLineMarkerProvider" value="true" />
        <entry key="com.intellij.lang.javascript.highlighting.TypeScriptSourceMappingLineMarkerProvider" value="true" />
        <entry key="com.intellij.sql.editor.SqlRecursiveCallLineMakerProvider" value="true" />
        <entry key="com.intellij.ui.ColorLineMarkerProvider" value="true" />
        <entry key="java.implemented" value="true" />
        <entry key="java.implementing" value="true" />
        <entry key="java.lambda" value="false" />
        <entry key="java.overridden" value="true" />
        <entry key="java.overriding" value="true" />
        <entry key="java.service" value="true" />
        <entry key="java.sibling.inherited" value="true" />
        <entry key="js.implemented" value="true" />
        <entry key="js.implementing" value="true" />
        <entry key="js.overridden" value="true" />
        <entry key="js.overriding" value="true" />
        <entry key="org.editorconfig.configmanagement.editor.EditorConfigPreviewMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.editor.images.ConfigureHtmlImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.editor.images.ConfigureMarkdownImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.editor.images.ConfigureTextHtmlImageLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.extensions.common.plantuml.PlantUMLCodeFenceDownloadLineMarkerProvider" value="true" />
        <entry key="org.intellij.plugins.markdown.extensions.jcef.mermaid.MermaidCodeFenceDownloadLineMarkerProvider" value="true" />
      </map>
    </option>
  </component>
</application>